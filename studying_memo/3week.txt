ajax 통신
ㄴ 페이지 리프레쉬 없이 서버에 요청할 수 있는 기능
비동기 통신 - 동시다발적으로 통신이 가능한 상태를 말함 // 장점 : 속도가 빠르다.  단점 : 실행순서를 보장 못함
동기통신 - 장점 : 실행 순서를 보장 할 수있다.
              단점 : 속도가 느리다.

json 은 key:value 
 ㄴ 문자열, 배열, 숫자, 딕셔너리 형태(key : value) 등을 담는다.

클라이언트(유저 또는 브라우저):
서버 : openAPI 은행창구와 같음. 


1. 항상 데이터 요청은 반드시 클라이언트(유저 또는 브라우저)가 먼저 요청한다.

데이터 요청 방식 : 1. get / 2. post /  3. patach / 4.put / 5. delete 

patch / put : 데이터를 변경할 떄
delete: 데이터를 지울때

GET : url에다가 데이터를 담아서 보낸다. (ex : naver.com?id=123&pw=123)
POST : body에다가 데이터를 담아서 보낸다.

url / header / body
json : url = url / header = type(get,post 등등) / body = data

[정리]
1. 요청은 반드시 클라가 한다.
2. 비동기 통신 ajax
3. get, post 요청방식
4. 요청 규격 : url, header, body


[에디터 vs IDE]
에디터 : 메모장 (전세계의 50퍼센트는 vs code로 개발한당)
IDE : 통합개발환경 (에디터 + 다양한 기능) ex) jetbrain-pycham(파이썬), webstorm(웹개발), intellij(자바개발), android studio(=안드로이드개발자)

[파이참 - 파이썬 세팅]
파일 > 세팅 > project:sparta > project interpreter
파이썬 - 스크립트 언어
project interpreter : 

(우리는 python3를 사용한다.)
파이선               vs            자바 (컴파일을 해줘야한다. 그래야 '01010'로 나온다.)
인터프리터                       컴파일                    
컴파일                             0101010 
0101010                           장점 : 속도가 빠르다.
단점 : 속도가 느림

파이선 > 인터프리터(실시간코딩)
-인터프리터(01010... = 기계언어)               

가상환경을 만드는 이유는??
- 프로젝트마다 파이선 패키지를 별도로 설치해주기 때문에 버전(파이선버전)관리가 가능하다.

가상환경을 세팅해주지 않으면??
- 파이썬 루트에 기본 설치가 된다.

      